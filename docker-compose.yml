services:
  db:
    image: postgres:15-alpine
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - docker.env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 1s
      timeout: 5s
      retries: 10

  migration:
    image: ghcr.io/artushak/archivanima:master
    volumes:
      - logs_migration:/var/log
    env_file:
      - docker.env
    command: "sh -c 'echo ${ROCKET_DB_URL} && /app/sqlx migrate run --database-url ${ROCKET_DB_URL}'"
    depends_on:
      db:
        condition: service_healthy

  backend:
    image: ghcr.io/artushak/archivanima:master
    volumes:
      - logs:/var/log
      - data:/app/data
      - datapublic:/app/datapublic
      - static:/app/internal/static
    env_file:
      - docker.env
    depends_on:
      migration:
        condition: service_completed_successfully
      db:
        condition: service_healthy

  nginx:
    image: nginx:1-alpine
    ports:
      - "8002:8002"
    volumes:
      - logs_nginx:/var/log
      - datapublic:/srv/media
      - static:/srv/static
      - ./nginx-conf:/etc/nginx/conf.d
    depends_on:
      - backend

volumes:
  data:
  datapublic:
  static:
  pgdata:
  logs:
  logs_migration:
  logs_nginx:
