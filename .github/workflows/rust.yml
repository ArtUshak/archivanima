name: Rust and Docker build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  rust-build:
    runs-on: ubuntu-latest
    container: rustlang/rust:nightly-alpine3.20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: archivanima
          POSTGRES_USER: archivanima_user
          POSTGRES_PASSWORD: archivanima_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Install apk packages
        run: apk add libressl-dev gcc npm libc-dev sassc tar git
      - name: Install npm packages
        run: npm install -g typescript
      - name: Install clippy
        run: rustup component add clippy
      - name: Install tools
        uses: baptiste0928/cargo-install@v3
        with:
          crate: sqlx-cli

      - name: Migrate DB
        run: sqlx migrate run
        env:
          DATABASE_URL: 'postgresql://archivanima_user:archivanima_password@postgres:5432/archivanima'
      - name: Generate .sqlx directory
        run: cargo sqlx prepare
        env:
          DATABASE_URL: 'postgresql://archivanima_user:archivanima_password@postgres:5432/archivanima'
      - name: Upload .sqlx directory
        uses: actions/upload-artifact@v4
        with:
          name: sqlx-dir
          path: .sqlx/
          include-hidden-files: true

      - name: Build
        run: cargo build --verbose
        env:
          DATABASE_URL: 'postgresql://archivanima_user:archivanima_password@postgres:5432/archivanima'
      - name: Run clippy
        run: cargo clippy --verbose
        env:
          DATABASE_URL: 'postgresql://archivanima_user:archivanima_password@postgres:5432/archivanima'
      - name: Install npm dependencies
        run: npm install
      - name: Run tests
        run: cargo test --verbose
        env:
          DATABASE_URL: 'postgresql://archivanima_user:archivanima_password@postgres:5432/archivanima'

  docker-build:
    runs-on: ubuntu-latest
    needs: rust-build
    if: ${{ github.event_name != 'pull_request' }}

    steps:
      - uses: actions/checkout@v4

      - name: Download .sqlx directory
        uses: actions/download-artifact@v4
        with:
          name: sqlx-dir
          path: .sqlx

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
